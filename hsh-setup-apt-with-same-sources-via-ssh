#!/bin/sh -efuC
set -o pipefail

# An easy way to get access from inside hasher to some local repo is via ssh.
# (Of course, there can be some security implications when you share network
# with hasher and give it access via ssh.)

case "$1" in
    -u|--update)
	readonly UPDATE=yes
	shift
	;;
    *)
	readonly UPDATE=
	;;
esac
readonly HSHDIR="$1"; shift

readonly MY="${0%/*}"
set -x

# Generate the key for the access from inside hasher, and register it.
"$MY"/hsh-setup-ssh-to-localhost "$HSHDIR"

hsh-install "$HSHDIR" -- apt

readonly FIELD_RE_FMT='[[:blank:]]*%s[[:blank:]]+'
printf -v TYPE_RE "$FIELD_RE_FMT" '[^[:blank:]]+'
readonly TYPE_RE
printf -v SIG_RE "$FIELD_RE_FMT" '\[[^]]*\]'
readonly SIG_RE
# We process the only sources.list filled out by mkaptbox.
# We don't honor comments (i.e., edit URIs inside them, too).
<"$HSHDIR"/aptbox/etc/apt/sources.list \
 sed -Ee "s,^($TYPE_RE($SIG_RE)?)file:/,\1ssh://localhost/," \
    | "$MY"/hsh-write --rooter "$HSHDIR" -- /etc/apt/sources.list

# Note that any /etc/apt/sources.list.d/* are not affected.

[ -n "$UPDATE" ] || exit 0

share_network=1 \
	     hsh-run --rooter "$HSHDIR" \
	     -- apt-get update \
	     </dev/null
